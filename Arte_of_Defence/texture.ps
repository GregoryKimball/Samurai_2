////////////////////////////////////////////////////////////////////////////////
// Filename: texture.ps
////////////////////////////////////////////////////////////////////////////////



/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;


cbuffer PixelBuffer
{
    float4 pixelColor;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};



////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
    float4 textureColor;


    // Sample the pixel color from the texture using the sampler at this texture coordinate location.
    textureColor = shaderTexture.Sample(SampleType, input.tex);


	// If the color is black on the texture then treat this pixel as transparent.
    if(textureColor.r == 0.0f && textureColor.g == 0.0f && textureColor.b == 0.0f)
    {
        textureColor.a = 0.0f;
    }    
    else
    {
        textureColor.a = 1.0f;
        textureColor = textureColor * pixelColor;
    }

    return textureColor;
}


